console.log('covid map generated <%= cached %> by memological expedition');
console.log('feel free to contribute: https://github.com/crystalbit/telegram-member-count-html-widget');
ymaps.ready(function() {
    var highlightedDistrict;
    var clicked = false;

    function baloonText(district) {
        var chats = district.properties.chats;
        var res = '';
        if (chats.length) for (let i = 0; i < chats.length; i++) {
            res += '<a href="tg://resolve?domain=' + chats[i].username + '">' +
            chats[i].name + '</a> (' + chats[i].count + ')<br/>'
        }
        return res;
    }

    function mouseEnterHandler(event) {
        var district = event.get('target').getParent();
        district.options.set({ strokeColor: '#000000' });
        var coords = event.get('coords');
        coords[0] = coords[0] + 0.1;
        districtBalloon.open(
            coords,
            baloonText(district)
        );
    };
    function mouseLeaveHandler(event) {
        var district = event.get('target').getParent();
        if (district !== highlightedDistrict) {
            district.options.set({ strokeColor: '#bbbbbb' });
            clicked = false;
        }
    };

    function clickEventHandlerMini(event) {
        mouseEnterHandler(event);
        var district = event.get('target').getParent();
        if (highlightedDistrict) highlightedDistrict.options.set({ strokeColor: '#bbbbbb' });
        highlightedDistrict = district;
    }

    var map = new ymaps.Map("first_map", {
        center: [65, 70],
        zoom: 2,
        controls: ['zoomControl']
    },{
        restrictMapArea: [[-10, -10], [85, -160]]
    });
    map.controls.get('zoomControl').options.set({ size: 'small' });
    var pane = new ymaps.pane.StaticPane(map, {
        zIndex: 100, css: {
            width: '100%', height: '100%', backgroundColor: '#f7f7f7'
        }
    });
    map.panes.append('white', pane);
    var districtBalloon = new ymaps.Balloon(map);
    districtBalloon.options.setParent(map.options);

    var combinedFeatures = [];
    var collected = 0;
    ymaps.borders.load('001', {
        lang: 'ru',
        quality: 2
    }).then(function(res) {
        collected++;
        combinedFeatures = res.features.concat(combinedFeatures)
        if (collected === 3) {
            collected = 0;
            fetchRegions();
        }
    });

    ymaps.borders.load('RU', {
        lang: 'ru',
        quality: 2
    }).then(function(res) {
        collected++;
        combinedFeatures = combinedFeatures.concat(res.features)
        if (collected === 3) {
            collected = 0;
            fetchRegions();
        }
    });

    ymaps.borders.load('UA', {
        lang: 'ru',
        quality: 2
    }).then(function(res) {
        collected++;
        combinedFeatures = combinedFeatures.concat(res.features)
        if (collected === 3) {
            collected = 0;
            fetchRegions();
        }
    });

    function fetchRegions() {
        <% items.forEach(item => { %>
            (function() {
                var region = new ymaps.GeoObjectCollection(null, {
                    fillColor: '<%= item.color %>',
                    strokeColor: '#bbbbbb',
                    strokeOpacity: 1,
                    fillOpacity: 1,
                    hintCloseTimeout: 0,
                    hintOpenTimeout: 0
                });
                region.properties.count = '<%= item.count ? item.count : 'нет информации' %>';
                region.properties.chats = <%- JSON.stringify(item.chats) %>;
                
                region.add(new ymaps.GeoObject(combinedFeatures.find(function(reg) { return reg.properties.iso3166 === '<%=  item.code %>'; })));
                map.geoObjects.add(region);
                region.events.add('mouseenter', mouseEnterHandler);
                region.events.add('mouseleave', mouseLeaveHandler);
                region.events.add('click', clickEventHandlerMini);
                /* region.events.add('click', clickEventHandler); */
            })();
        <% }); %>
    }
});
